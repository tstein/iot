#!/usr/bin/env python3

import logging
import os
import socket
import sys

import paho.mqtt.client
from sh import signal_cli

import lib.mqtt

TELLER_PHONE_CC = "TELLER_PHONE_CC"
TED_PHONE = "TED_PHONE"
TED_PHONE_CC = "TED_PHONE_CC"
RUBA_PHONE = "RUBA_PHONE"
RUBA_PHONE_CC = "RUBA_PHONE_CC"
ENVVARS = [TELLER_PHONE_CC, TED_PHONE, TED_PHONE_CC, RUBA_PHONE, RUBA_PHONE_CC]

# important objects
mqttc = paho.mqtt.client.Client(socket.gethostname() + "-tellerd")

def signal(number, message):
    signal_cli("-u", os.environ[TELLER_PHONE_CC],
               "send",
               "-m", message,
               number)

def mms_tmo(number, message):
    os.system("echo | mail -s '{}' {}@tmomail.net".format(message, number))

def tell_ted(message):
    logging.info("telling ted: " + message)
    mms_tmo(os.environ[TED_PHONE], message)

def tell_ruba(message):
    logging.info("telling ruba: " + message)
    mms_tmo(os.environ[RUBA_PHONE], message)

def on_message(client, userdata, message):
    tell_whom = message.topic.split("/")[1]
    payload = message.payload.decode("UTF-8")
    if tell_whom == "ted":
        tell_ted(payload)
    elif tell_whom == "ruba":
        tell_ruba(payload)
    else:
        tell_ted("who is {} and why do they want to know that {}?".format(
            tell_whom, payload))

if __name__ == "__main__":
    for var in ENVVARS:
        if var not in os.environ:
            print("{} not in environment".format(var))
            sys.exit(1)

    logging.basicConfig(
            format='%(levelname)s: %(name)s: %(message)s', level=logging.INFO)
    mqttc.connect(lib.mqtt.server)
    mqttc.on_message = on_message
    mqttc.subscribe("tell/+")
    mqttc.loop_forever()
