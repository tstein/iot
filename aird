#!/usr/bin/env python3

from __future__ import division

import datetime
import json
import time
from threading import Thread

import pigpio
from flask import Flask

log_interval = 30 * 60

gpio = pigpio.pi()
port = 1316     # 1000 + sum(map(ord, "air"))
app = Flask(__name__)

def log(msg):
    log_file = "/var/log/air.log"
    tstamp = datetime.datetime.now().isoformat()
    with open(log_file, 'a') as l:
        line = "{} - {}\n".format(tstamp, msg)
        l.write(line)

def read_air():
    i2c = gpio.i2c_open(1, 0x40)

    gpio.i2c_write_device(i2c, [0xF5])
    time.sleep(0.1)
    _, rh_raw = gpio.i2c_read_device(i2c, 3) # msb, lsb, checksum
    rh_val = (rh_raw[0]<<8) + rh_raw[1]
    rh = round(((125.0 * rh_val)/65536.0) - 6.0, 1)

    gpio.i2c_write_device(i2c, [0xF3]) # T no hold
    time.sleep(0.1)
    _, t_raw = gpio.i2c_read_device(i2c, 3) # msb, lsb, checksum
    t_val = (t_raw[0]<<8) + t_raw[1]
    temp_c = round(((175.72 * t_val)/65536.0) - 46.85, 1)

    gpio.i2c_close(i2c)
    return round(rh, 1), round(temp_c, 1)

@app.route("/")
def air():
    rh, temp_c = read_air()
    temp_f = round(((temp_c * 9 / 5) + 32), 1)
    d = {"rh": rh,
         "temp_c": temp_c,
         "temp_f": temp_f}
    return json.dumps(d)

if __name__ == '__main__':
    log("****************")
    log("* Starting up! *")
    log("****************")
    Thread(target=lambda: app.run(host="0.0.0.0", port=port)).start()
    while True:
        rh, temp_c = read_air()
        log("temperature: {} C, relative humidity: {}%".format(temp_c, rh))
        time.sleep(log_interval)
